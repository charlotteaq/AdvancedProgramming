[0m[[0minfo[0m] [0m[32mTermSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mBasic eval[0m[0m
[0m[[0minfo[0m] [0m[32m- should answer 42 to a division [Wadler][0m[0m
[0m[[0minfo[0m] [0m[32m- should return 42 from a constant[0m[0m
[0m[[0minfo[0m] [0m[32m- should throw a scala exception on division by 0[0m[0m
[0m[[0minfo[0m] [0m[32m- should crash on unsafe terms[0m[0m
[0m[[0minfo[0m] [0m[32mException eval[0m[0m
[0m[[0minfo[0m] [0m[32m- should answer Return(42) to our division [Wadler][0m[0m
[0m[[0minfo[0m] [0m[32m- should answer Return(42) to a constant[0m[0m
[0m[[0minfo[0m] [0m[32m- should return an exception value for a division by zero[0m[0m
[0m[[0minfo[0m] [0m[32mState eval[0m[0m
[0m[[0minfo[0m] [0m[32m- should should count two divisions[0m[0m
[0m[[0minfo[0m] [0m[32m- should should count no divisions[0m[0m
[0m[[0minfo[0m] [0m[32m- should throw a scala exception on division by 0[0m[0m
[0m[[0minfo[0m] [0m[32mOutput eval (answer)[0m[0m
[0m[[0minfo[0m] [0m[32m- should give good 'result' and string output[0m[0m
[0m[[0minfo[0m] [0m[32m- should return simple result for a constant[0m[0m
[0m[[0minfo[0m] [0m[32m- should throw a scala exception on division by 0[0m[0m
[0m[[0minfo[0m] [0m[32mBasic monadic eval[0m[0m
[0m[[0minfo[0m] [0m[32m- should be 42 [Wadler][0m[0m
[0m[[0minfo[0m] [0m[32m- should return 42 for a constant[0m[0m
[0m[[0minfo[0m] [0m[32m- should throw an exception[0m[0m
[0m[[0minfo[0m] [0m[32m- should crash on unsafe terms[0m[0m
[0m[[0minfo[0m] [0m[32mBasic evalutors[0m[0m
[0m[[0minfo[0m] [0m[32m- should behave identically[0m[0m
[0m[[0minfo[0m] [0m[32mMonadic exception eval[0m[0m
[0m[[0minfo[0m] [0m[32m- should be Return(42) [Wadler][0m[0m
[0m[[0minfo[0m] [0m[32m- should return an exception on division by zero[0m[0m
[0m[[0minfo[0m] [0m[32mException evalutors[0m[0m
[0m[[0minfo[0m] [0m[32m- should behave identically (safe)[0m[0m
[0m[[0minfo[0m] [0m[31m- should behave identically (unsafe) *** FAILED ***[0m[0m
[0m[[0minfo[0m] [0m[31m  GeneratorDrivenPropertyCheckFailedException was thrown during property evaluation.[0m[0m
[0m[[0minfo[0m] [0m[31m   (TermSpec.scala:178)[0m[0m
[0m[[0minfo[0m] [0m[31m    Falsified after 0 successful property evaluations.[0m[0m
[0m[[0minfo[0m] [0m[31m    Location: (TermSpec.scala:178)[0m[0m
[0m[[0minfo[0m] [0m[31m    Occurred when passed generated values ([0m[0m
[0m[[0minfo[0m] [0m[31m      arg0 = Div(Con(73),Con(0))[0m[0m
[0m[[0minfo[0m] [0m[31m    )[0m[0m
[0m[[0minfo[0m] [0m[32mMonadic state eval[0m[0m
[0m[[0minfo[0m] [0m[32m- should should count two divisions[0m[0m
[0m[[0minfo[0m] [0m[32m- should should count no divisions[0m[0m
[0m[[0minfo[0m] [0m[32m- should throw a scala exception on division by 0[0m[0m
[0m[[0minfo[0m] [0m[32mState evaluators[0m[0m
[0m[[0minfo[0m] [0m[32m- should behave identically (safe)[0m[0m
[0m[[0minfo[0m] [0m[32mMonadic output eval[0m[0m
[0m[[0minfo[0m] [0m[32m- should give good result and string output[0m[0m
[0m[[0minfo[0m] [0m[32m- should return simple result for a constant[0m[0m
[0m[[0minfo[0m] [0m[32m- should throw a scala exception on division by 0[0m[0m
[0m[[0minfo[0m] [0m[32mOutput evaluators[0m[0m
[0m[[0minfo[0m] [0m[32m- should behave identically (safe)[0m[0m
